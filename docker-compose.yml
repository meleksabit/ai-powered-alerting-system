services:
  # Prometheus service
  prometheus:
    build:
      context: ./prometheus-grafana
      dockerfile: Dockerfile.prometheus
    image: ${DOCKER_USERNAME}/prometheus:${TAG}
    ports:
      - "9090:9090"
    user: "65534"
    restart: unless-stopped
    networks:
      - monitor-net

  # Grafana service
  grafana:
    build:
      context: ./prometheus-grafana
      dockerfile: Dockerfile.grafana
      args:
        TAG: ${TAG}
    image: ${DOCKER_USERNAME}/grafana:${TAG}
    ports:
      - "3000:3000"
    volumes:
      - ./prometheus-grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
    secrets:
      - grafana_admin_user
      - grafana_admin_password
    environment:
      - GF_SECURITY_ADMIN_USER_FILE=/run/secrets/grafana_admin_user
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password  # Expose Grafana on port 3000
    restart: unless-stopped
    networks:
      - monitor-net

  # Python Flask app service
  python-app:
    build:
      context: .
      dockerfile: ./my_app/Dockerfile.app
      args:
          TAG: ${TAG}
    image: ${DOCKER_USERNAME}/ai-powered-alerting-system:${TAG}
    ports:
      - "5000:5000"  # Expose Flask app on port 5000
      - "8000:8000"  # Expose Prometheus metrics on port 8000
    volumes:
      - ./my_app:/app  # Mount app source code
    restart: unless-stopped
    depends_on:
      - prometheus
      - grafana
    networks:
      - monitor-net

# Define secrets for Grafana
secrets:
  grafana_admin_user:
    file: ${HOME}/secrets/grafana_admin_user.txt
  grafana_admin_password:
    file: ${HOME}/secrets/grafana_admin_password.txt

# Define a shared network
networks:
  monitor-net:
    driver: bridge

# Define a volume for Prometheus data storage
volumes:
  prometheus_data:
  grafana_data:
