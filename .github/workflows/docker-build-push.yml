name: Docker Build and Push to DockerHub

on:
  workflow_run:
    workflows: ["SonarCloud Analysis"]
    types:
      - completed
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Check out the Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Step 2: Set up Docker Buildx in Rootless Mode (No Insecure Entitlement)
      - name: Set up Docker Buildx (Rootless)
        uses: docker/setup-buildx-action@v3.8.0
        with:
          driver: docker-container  # Enables rootless mode
          driver-opts: network=host  # Optional, ensure host networking if needed
          buildkitd-flags: --debug  # No insecure entitlements added

      # ✅ Step 3: Verify Buildx Configuration
      - name: Verify Buildx Setup
        run: docker buildx inspect --bootstrap

      # ✅ Debug Step: List Available Artifacts Before Download
      - name: List Available Artifacts (Debugging)
        run: |
          ls -R | find . -name "version.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Step 4: Download Artifact
      - name: Download Version Tag from Sonar Workflow
        uses: dawidd6/action-download-artifact@v7
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: version
          path: .
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Step 5: Load Version Tag from Artifact
      - name: Load Version Tag
        run: |
          IMAGE_TAG=$(cat version.txt)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # ✅ Step 6: Log in to DockerHub
      - name: Log in to DockerHub using secrets
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      # ✅ Step 7: Build and Push Docker Image
      - name: Build and Push All Services Using Docker Compose
        run: |
          # Generate a unique timestamp for tagging
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Using TIMESTAMP: $TIMESTAMP"

          # Export environment variables for Docker Compose
          export TAG=$TIMESTAMP
          export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}

          # Build and push images
          docker compose build --build-arg TAG=$TAG
          docker compose push

          # Output the tag for debugging
          echo "Images built and pushed with tag: $TAG"

      # ✅ Step 8: Confirm Image Pushed
      - name: Confirm Image Push
        run: |
          echo "Docker image pushed with tag: ${{ env.IMAGE_TAG }}"
          