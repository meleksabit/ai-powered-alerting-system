name: Docker Build and Push to DockerHub

on:
  push:
    branches:
      - main  # Trigger only on pushes/merges to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Check out the Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Step 2: Set up Docker Buildx in Rootless Mode
      - name: Set up Docker Buildx (Rootless)
        uses: docker/setup-buildx-action@v3.8.0
        with:
          driver: docker-container
          driver-opts: network=host
          buildkitd-flags: --debug

      # ✅ Step 3: Verify Buildx Configuration
      - name: Verify Buildx Setup
        run: docker buildx inspect --bootstrap

      # ✅ Step 4: Detect Changed Files
      - name: Detect Changed Files
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            python-app:
              - 'my_app/**'
            prometheus:
              - 'prometheus-grafana/prometheus.yml'
            grafana:
              - 'prometheus-grafana/grafana.ini'

      # ✅ Step 5: Log in to DockerHub
      - name: Log in to DockerHub using secrets
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      # ✅ Step 6: Conditional Build and Push for Python App
      - name: Build and Push Python App
        if: steps.changes.outputs.python-app == 'true'
        run: |
          # Generate a unique timestamp for tagging
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Using TIMESTAMP: $TIMESTAMP"

          # Build and push the Python app image
          docker compose build --build-arg TAG=$TIMESTAMP python-app
          docker compose push python-app

      # ✅ Step 7: Conditional Build and Push for Prometheus
      - name: Build and Push Prometheus
        if: steps.changes.outputs.prometheus == 'true'
        run: |
          # Generate a unique timestamp for tagging
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Using TIMESTAMP: $TIMESTAMP"

          # Build and push the Prometheus image
          docker compose build --build-arg TAG=$TIMESTAMP prometheus
          docker compose push prometheus

      # ✅ Step 8: Conditional Build and Push for Grafana
      - name: Build and Push Grafana
        run: |
          # Generate a unique timestamp for tagging
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Using TIMESTAMP: $TIMESTAMP"

          # Export environment variables
          export TAG=$TIMESTAMP
          export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}

          # Build and push the Grafana image
          docker compose build --build-arg TAG=$TAG grafana
          docker compose push grafana

          # Confirm successful push
          echo "Grafana image built and pushed with tag: $TAG"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      # ✅ Step 9: Confirm Images Pushed
      - name: Confirm Image Push
        run: |
          echo "Docker images pushed if changes were detected."
