name: Docker Vulnerability Scan

on:
  push:
    branches:
      - main
      - stage
      - test
      - development
  pull_request:

jobs:
  build-and-scan:
    name: Build and Scan Docker Images
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Check out Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Step 2: Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.58.2/trivy_0.58.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.58.2_Linux-64bit.deb

      # ✅ Step 3: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      # ✅ Step 4: Generate TAG or use existing one
      - name: Set TAG Variable
        run: |
          if [ -z "${{ github.sha }}" ]; then
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            echo "Using fallback TIMESTAMP: $TIMESTAMP"
            echo "TAG=$TIMESTAMP" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.sha }}" >> $GITHUB_ENV
          fi

      # ✅ Step 5: Verify and Scan Python App Image
      - name: Verify Python App Image
        run: |
          if ! docker manifest inspect ${{ secrets.DOCKER_USERNAME }}/ai-powered-alerting-system:${{ env.TAG }}; then
            echo "Python App image not found. Skipping scan."
            exit 0
          fi

      - name: Scan Python App Image
        run: trivy image ${{ secrets.DOCKER_USERNAME }}/ai-powered-alerting-system:${{ env.TAG }}

      # ✅ Step 6: Verify and Scan Prometheus Image
      - name: Verify Prometheus Image
        run: |
          if ! docker manifest inspect ${{ secrets.DOCKER_USERNAME }}/prometheus:${{ env.TAG }}; then
            echo "Prometheus image not found. Skipping scan."
            exit 0
          fi

      - name: Scan Prometheus Image
        run: trivy image ${{ secrets.DOCKER_USERNAME }}/prometheus:${{ env.TAG }}

      # ✅ Step 7: Verify and Scan Grafana Image
      - name: Verify Grafana Image
        run: |
          if ! docker manifest inspect ${{ secrets.DOCKER_USERNAME }}/grafana:${{ env.TAG }}; then
            echo "Grafana image not found. Skipping scan."
            exit 0
          fi

      - name: Scan Grafana Image
        run: trivy image ${{ secrets.DOCKER_USERNAME }}/grafana:${{ env.TAG }}
