name: Docker Vulnerability Scan

on:
  push:
    branches:
      - main
      - stage
      - test
      - development
  pull_request:

jobs:
  build-and-scan:
    name: Build and Scan Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.57.0/trivy_0.57.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.57.0_Linux-64bit.deb

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      # Step to download and cache Trivy vulnerability database
      - name: Download Trivy DB
        uses: actions/cache@v4.2.0
        with:
          path: ./.trivy-cache
          key: ${{ runner.os }}-trivy-db
          restore-keys: |
            ${{ runner.os }}-trivy-db

      - name: Initialize Trivy Database
        run: |
          mkdir -p .trivy-cache
          trivy --cache-dir ./.trivy-cache image --download-db-only

      # Build and scan python-app image with GitHub SHA as the tag
      - name: Build Docker Compose python-app image
        run: docker-compose -f docker-compose.yml build python-app

      - name: Tag Python App Image with SHA
        run: docker tag ai-powered-alerting-system-python-app:latest ai-powered-alerting-system-python-app:${{ github.sha }}

      - name: Verify Docker images
        run: docker images

      - name: Scan ai-powered-alerting-system-python-app image for vulnerabilities (offline mode)
        run: trivy image --skip-db-update --cache-dir ./.trivy-cache ai-powered-alerting-system-python-app:${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan ai-powered-alerting-system-python-app image for vulnerabilities (online mode)
        run: trivy image ai-powered-alerting-system-python-app:${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}